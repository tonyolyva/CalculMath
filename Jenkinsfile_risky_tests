pipeline {
  agent any

  options {
    skipDefaultCheckout()
    disableConcurrentBuilds()
    buildDiscarder(logRotator(numToKeepStr: '10'))
  }

  stages {
    stage('Run Risky Tests') {
      steps {
        echo "[CalculMath/Jenkinsfile_risky_tests] üìÜ Trigger reason: ${currentBuild.getBuildCauses()}"
        checkout scm

        dir('AppiumPythonProject') {
          git url: 'https://github.com/tonyolyva/AppiumPythonProject.git', branch: 'main'
        }

        dir('AppiumPythonProject') {
          echo '[CalculMath/Jenkinsfile_risky_tests] ‚úÖ Repo cloned. Proceeding with test setup...'
          echo '[CalculMath/Jenkinsfile_risky_tests] ‚ñ∂Ô∏è Executing run_risky_tests.sh...'
          sh './run_risky_tests.sh'
        }
      }
    }
  }

  post {
    always {
      dir('AppiumPythonProject') {
        script {
          sh '''
            mkdir -p reports/screenshots
            echo '[CalculMath/Jenkinsfile_risky_tests] üêõ DEBUG: Created screenshot marker' > reports/screenshots/screenshot_test_marker.txt
          '''
          echo "[CalculMath/Jenkinsfile_risky_tests] ‚úÖ Created AppiumPythonProject/reports/screenshots/screenshot_test_marker.txt"
        }
        sh 'sort -t \',\' -k3,3 --stable ai/history.csv | uniq > ai/history_sorted.csv && mv ai/history_sorted.csv ai/history.csv'
        echo '[CalculMath/Jenkinsfile_risky_tests] üîÅ Deduplicated and sorted ai/history.csv by timestamp'

        echo '[CalculMath/Jenkinsfile_risky_tests] ‚¨ÜÔ∏è Committing updated history.csv back to GitHub'
        sh '''
          git config user.name "tonyolyva-bot"
          git config user.email "olyvatony@gmail.com"

          git add ai/history.csv
          git commit -m "ü§ñ Update history.csv after risky tests Jenkins run" || echo "[SKIP] No changes to commit"
          git push origin main || echo "[ERROR] Git push failed ‚Äî check credentials or branch state"

          echo '[CalculMath/Jenkinsfile_risky_tests] ‚¨áÔ∏è Syncing updated history.csv to local clone...'
          LOCAL_REPO_PATH="/Users/Yutaka/Workspace/AppiumPythonProject"
          if [ -d "$LOCAL_REPO_PATH/ai" ]; then
            cp ai/history.csv "$LOCAL_REPO_PATH/ai/history.csv"
            echo "[CalculMath/Jenkinsfile_risky_tests] ‚úÖ Copied history.csv to $LOCAL_REPO_PATH/ai/"
          else
            echo "[CalculMath/Jenkinsfile_risky_tests] ‚ö†Ô∏è Local clone not found at $LOCAL_REPO_PATH ‚Äî skipping sync"
          fi
        '''
        echo '[CalculMath/Jenkinsfile_risky_tests] üìÇ Archiving artifacts from reports...'
        archiveArtifacts artifacts: 'reports/**/*', allowEmptyArchive: true
        archiveArtifacts artifacts: 'ai/history.csv', allowEmptyArchive: true
        echo '[CalculMath/Jenkinsfile_risky_tests] üìÅ Post-processing complete'
      }
    }
  }
}
